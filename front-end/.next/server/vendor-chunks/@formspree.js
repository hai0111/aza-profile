/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@formspree";
exports.ids = ["vendor-chunks/@formspree"];
exports.modules = {

/***/ "(ssr)/./node_modules/@formspree/core/dist/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@formspree/core/dist/index.js ***!
  \****************************************************/
/***/ ((module) => {

eval("var g = Object.defineProperty;\nvar j = Object.getOwnPropertyDescriptor;\nvar L = Object.getOwnPropertyNames;\nvar V = Object.prototype.hasOwnProperty;\nvar Y = (e, r)=>{\n    for(var t in r)g(e, t, {\n        get: r[t],\n        enumerable: !0\n    });\n}, K = (e, r, t, o)=>{\n    if (r && typeof r == \"object\" || typeof r == \"function\") for (let s of L(r))!V.call(e, s) && s !== t && g(e, s, {\n        get: ()=>r[s],\n        enumerable: !(o = j(r, s)) || o.enumerable\n    });\n    return e;\n};\nvar $ = (e)=>K(g({}, \"__esModule\", {\n        value: !0\n    }), e);\nvar h = (e, r, t)=>new Promise((o, s)=>{\n        var i = (a)=>{\n            try {\n                l(t.next(a));\n            } catch (m) {\n                s(m);\n            }\n        }, c = (a)=>{\n            try {\n                l(t.throw(a));\n            } catch (m) {\n                s(m);\n            }\n        }, l = (a)=>a.done ? o(a.value) : Promise.resolve(a.value).then(i, c);\n        l((t = t.apply(e, r)).next());\n    });\nvar W = {};\nY(W, {\n    SubmissionError: ()=>p,\n    appendExtraData: ()=>E,\n    createClient: ()=>F,\n    getDefaultClient: ()=>U,\n    isSubmissionError: ()=>A\n});\nmodule.exports = $(W);\nvar u = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\", J = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nfunction I(e) {\n    e = String(e);\n    for(var r, t, o, s, i = \"\", c = 0, l = e.length % 3; c < e.length;){\n        if ((t = e.charCodeAt(c++)) > 255 || (o = e.charCodeAt(c++)) > 255 || (s = e.charCodeAt(c++)) > 255) throw new TypeError(\"Failed to execute 'btoa' on 'Window': The string to be encoded contains characters outside of the Latin1 range.\");\n        r = t << 16 | o << 8 | s, i += u.charAt(r >> 18 & 63) + u.charAt(r >> 12 & 63) + u.charAt(r >> 6 & 63) + u.charAt(r & 63);\n    }\n    return l ? i.slice(0, l - 3) + \"===\".substring(l) : i;\n}\nfunction O(e) {\n    if (e = String(e).replace(/[\\t\\n\\f\\r ]+/g, \"\"), !J.test(e)) throw new TypeError(\"Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.\");\n    e += \"==\".slice(2 - (e.length & 3));\n    for(var r, t = \"\", o, s, i = 0; i < e.length;)r = u.indexOf(e.charAt(i++)) << 18 | u.indexOf(e.charAt(i++)) << 12 | (o = u.indexOf(e.charAt(i++))) << 6 | (s = u.indexOf(e.charAt(i++))), t += o === 64 ? String.fromCharCode(r >> 16 & 255) : s === 64 ? String.fromCharCode(r >> 16 & 255, r >> 8 & 255) : String.fromCharCode(r >> 16 & 255, r >> 8 & 255, r & 255);\n    return t;\n}\nvar G = ()=>navigator.webdriver || !!document.documentElement.getAttribute(O(\"d2ViZHJpdmVy\")) || !!window.callPhantom || !!window._phantom, y = class {\n    constructor(){\n        this.loadedAt = Date.now(), this.webdriver = G();\n    }\n    data() {\n        return {\n            loadedAt: this.loadedAt,\n            webdriver: this.webdriver\n        };\n    }\n};\nvar S = class {\n    constructor(r){\n        this.kind = \"success\";\n        this.next = r.next;\n    }\n};\nfunction w(e) {\n    return \"next\" in e && typeof e.next == \"string\";\n}\nvar b = class {\n    constructor(r, t){\n        this.paymentIntentClientSecret = r;\n        this.resubmitKey = t;\n        this.kind = \"stripePluginPending\";\n    }\n};\nfunction _(e) {\n    if (\"stripe\" in e && \"resubmitKey\" in e && typeof e.resubmitKey == \"string\") {\n        let { stripe: r } = e;\n        return typeof r == \"object\" && r != null && \"paymentIntentClientSecret\" in r && typeof r.paymentIntentClientSecret == \"string\";\n    }\n    return !1;\n}\nfunction A(e) {\n    return e.kind === \"error\";\n}\nvar p = class {\n    constructor(...r){\n        this.kind = \"error\";\n        this.formErrors = [];\n        this.fieldErrors = new Map;\n        var t;\n        for (let o of r){\n            if (!o.field) {\n                this.formErrors.push({\n                    code: o.code && z(o.code) ? o.code : \"UNSPECIFIED\",\n                    message: o.message\n                });\n                continue;\n            }\n            let s = (t = this.fieldErrors.get(o.field)) != null ? t : [];\n            s.push({\n                code: o.code && Q(o.code) ? o.code : \"UNSPECIFIED\",\n                message: o.message\n            }), this.fieldErrors.set(o.field, s);\n        }\n    }\n    getFormErrors() {\n        return [\n            ...this.formErrors\n        ];\n    }\n    getFieldErrors(r) {\n        var t;\n        return (t = this.fieldErrors.get(r)) != null ? t : [];\n    }\n    getAllFieldErrors() {\n        return Array.from(this.fieldErrors);\n    }\n};\nfunction z(e) {\n    return e in B;\n}\nvar B = {\n    BLOCKED: \"BLOCKED\",\n    EMPTY: \"EMPTY\",\n    FILES_TOO_BIG: \"FILES_TOO_BIG\",\n    FORM_NOT_FOUND: \"FORM_NOT_FOUND\",\n    INACTIVE: \"INACTIVE\",\n    NO_FILE_UPLOADS: \"NO_FILE_UPLOADS\",\n    PROJECT_NOT_FOUND: \"PROJECT_NOT_FOUND\",\n    TOO_MANY_FILES: \"TOO_MANY_FILES\"\n};\nfunction Q(e) {\n    return e in Z;\n}\nvar Z = {\n    REQUIRED_FIELD_EMPTY: \"REQUIRED_FIELD_EMPTY\",\n    REQUIRED_FIELD_MISSING: \"REQUIRED_FIELD_MISSING\",\n    STRIPE_CLIENT_ERROR: \"STRIPE_CLIENT_ERROR\",\n    STRIPE_SCA_ERROR: \"STRIPE_SCA_ERROR\",\n    TYPE_EMAIL: \"TYPE_EMAIL\",\n    TYPE_NUMERIC: \"TYPE_NUMERIC\",\n    TYPE_TEXT: \"TYPE_TEXT\"\n};\nfunction P(e) {\n    return \"errors\" in e && Array.isArray(e.errors) && e.errors.every((r)=>typeof r.message == \"string\") || \"error\" in e && typeof e.error == \"string\";\n}\nvar D = \"3.0.1\";\nvar v = (e)=>I(JSON.stringify(e)), N = (e)=>{\n    let r = `@formspree/core@${D}`;\n    return e ? `${e} ${r}` : r;\n};\nfunction E(e, r, t) {\n    e instanceof FormData ? e.append(r, t) : e[r] = t;\n}\nfunction M(e) {\n    return e !== null && typeof e == \"object\";\n}\nvar R = class {\n    constructor(r = {}){\n        this.project = r.project, this.stripe = r.stripe,  false && (0);\n    }\n    submitForm(s, i) {\n        return h(this, arguments, function*(r, t, o = {}) {\n            let c = o.endpoint || \"https://formspree.io\", l = this.project ? `${c}/p/${this.project}/f/${r}` : `${c}/f/${r}`, a = {\n                Accept: \"application/json\",\n                \"Formspree-Client\": N(o.clientName)\n            };\n            this.session && (a[\"Formspree-Session-Data\"] = v(this.session.data())), t instanceof FormData || (a[\"Content-Type\"] = \"application/json\");\n            function m(f) {\n                return h(this, null, function*() {\n                    try {\n                        let n = yield (yield fetch(l, {\n                            method: \"POST\",\n                            mode: \"cors\",\n                            body: f instanceof FormData ? f : JSON.stringify(f),\n                            headers: a\n                        })).json();\n                        if (M(n)) {\n                            if (P(n)) return Array.isArray(n.errors) ? new p(...n.errors) : new p({\n                                message: n.error\n                            });\n                            if (_(n)) return new b(n.stripe.paymentIntentClientSecret, n.resubmitKey);\n                            if (w(n)) return new S({\n                                next: n.next\n                            });\n                        }\n                        return new p({\n                            message: \"Unexpected response format\"\n                        });\n                    } catch (d) {\n                        let n = d instanceof Error ? d.message : `Unknown error while posting to Formspree: ${JSON.stringify(d)}`;\n                        return new p({\n                            message: n\n                        });\n                    }\n                });\n            }\n            if (this.stripe && o.createPaymentMethod) {\n                let f = yield o.createPaymentMethod();\n                if (f.error) return new p({\n                    code: \"STRIPE_CLIENT_ERROR\",\n                    field: \"paymentMethod\",\n                    message: \"Error creating payment method\"\n                });\n                E(t, \"paymentMethod\", f.paymentMethod.id);\n                let d = yield m(t);\n                if (d.kind === \"error\") return d;\n                if (d.kind === \"stripePluginPending\") {\n                    let n = yield this.stripe.handleCardAction(d.paymentIntentClientSecret);\n                    if (n.error) return new p({\n                        code: \"STRIPE_CLIENT_ERROR\",\n                        field: \"paymentMethod\",\n                        message: \"Stripe SCA error\"\n                    });\n                    t instanceof FormData ? t.delete(\"paymentMethod\") : delete t.paymentMethod, E(t, \"paymentIntent\", n.paymentIntent.id), E(t, \"resubmitKey\", d.resubmitKey);\n                    let x = yield m(t);\n                    return k(x), x;\n                }\n                return d;\n            }\n            let T = yield m(t);\n            return k(T), T;\n        });\n    }\n};\nfunction k(e) {\n    let { kind: r } = e;\n    if (r !== \"success\" && r !== \"error\") throw new Error(`Unexpected submission result (kind: ${r})`);\n}\nvar F = (e)=>new R(e), U = ()=>(C || (C = F()), C), C;\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@formspree/core/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@formspree/react/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@formspree/react/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CardElement: () => (/* reexport safe */ _stripe_react_stripe_js__WEBPACK_IMPORTED_MODULE_0__.CardElement),\n/* harmony export */   FormspreeProvider: () => (/* binding */ _),\n/* harmony export */   ValidationError: () => (/* binding */ T),\n/* harmony export */   useForm: () => (/* binding */ W),\n/* harmony export */   useFormspree: () => (/* binding */ F),\n/* harmony export */   useSubmit: () => (/* binding */ x)\n/* harmony export */ });\n/* harmony import */ var _stripe_react_stripe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stripe/react-stripe-js */ \"(ssr)/./node_modules/@stripe/react-stripe-js/dist/react-stripe.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _formspree_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @formspree/core */ \"(ssr)/./node_modules/@formspree/core/dist/index.js\");\n/* harmony import */ var _stripe_stripe_js_pure_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stripe/stripe-js/pure.js */ \"(ssr)/./node_modules/@stripe/stripe-js/pure.js\");\n\n\nfunction T(e) {\n    let { prefix: t, field: s, errors: r, ...i } = e;\n    if (r == null) return null;\n    let a = s ? r.getFieldErrors(s) : r.getFormErrors();\n    return a.length === 0 ? null : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        ...i\n    }, t ? `${t} ` : null, a.map((l)=>l.message).join(\", \"));\n}\n\n\n\n\nvar v = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createContext(null);\nfunction _(e) {\n    let { children: t, project: s, stripePK: r } = e, [i, a] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((0,_formspree_core__WEBPACK_IMPORTED_MODULE_3__.createClient)({\n        project: s\n    })), l = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>r ? (0,_stripe_stripe_js_pure_js__WEBPACK_IMPORTED_MODULE_2__.loadStripe)(r) : null, [\n        r\n    ]);\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let n = !0;\n        return n && a((o)=>o.project !== s ? (0,_formspree_core__WEBPACK_IMPORTED_MODULE_3__.createClient)({\n                ...o,\n                project: s\n            }) : o), ()=>{\n            n = !1;\n        };\n    }, [\n        s\n    ]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let n = !0;\n        return l?.then((o)=>{\n            n && o && a((m)=>(0,_formspree_core__WEBPACK_IMPORTED_MODULE_3__.createClient)({\n                    ...m,\n                    stripe: o\n                }));\n        }), ()=>{\n            n = !1;\n        };\n    }, [\n        l\n    ]), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(v.Provider, {\n        value: {\n            client: i\n        }\n    }, l ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(_stripe_react_stripe_js__WEBPACK_IMPORTED_MODULE_0__.Elements, {\n        stripe: l\n    }, t) : t);\n}\nfunction F() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(v) ?? {\n        client: (0,_formspree_core__WEBPACK_IMPORTED_MODULE_3__.getDefaultClient)()\n    };\n}\n\n\n\n\nvar P = \"2.5.1\";\nvar N = `@formspree/react@${P}`;\nfunction x(e, t = {}) {\n    let s = F(), { client: r = s.client, extraData: i, onError: a, onSuccess: l, origin: n } = t, { stripe: o } = r, m = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>o?.elements().getElement(_stripe_react_stripe_js__WEBPACK_IMPORTED_MODULE_0__.CardElement), [\n        o\n    ]);\n    return async function(p) {\n        let u = O(p) ? U(p) : p;\n        if (typeof i == \"object\") for (let [h, y] of Object.entries(i)){\n            let c;\n            typeof y == \"function\" ? c = await y() : c = y, c !== void 0 && (0,_formspree_core__WEBPACK_IMPORTED_MODULE_3__.appendExtraData)(u, h, c);\n        }\n        let f = await r.submitForm(e, u, {\n            endpoint: n,\n            clientName: N,\n            createPaymentMethod: o && m ? ()=>o.createPaymentMethod({\n                    type: \"card\",\n                    card: m,\n                    billing_details: z(u)\n                }) : void 0\n        });\n        (0,_formspree_core__WEBPACK_IMPORTED_MODULE_3__.isSubmissionError)(f) ? a?.(f) : l?.(f);\n    };\n}\nfunction O(e) {\n    return \"preventDefault\" in e && typeof e.preventDefault == \"function\";\n}\nfunction U(e) {\n    e.preventDefault();\n    let t = e.currentTarget;\n    if (t.tagName != \"FORM\") throw new Error(\"submit was triggered for a non-form element\");\n    return new FormData(t);\n}\nfunction z(e) {\n    let t = {\n        address: I(e)\n    };\n    for (let s of [\n        \"name\",\n        \"email\",\n        \"phone\"\n    ]){\n        let r = e instanceof FormData ? e.get(s) : e[s];\n        r && typeof r == \"string\" && (t[s] = r);\n    }\n    return t;\n}\nfunction I(e) {\n    let t = {};\n    for (let [s, r] of [\n        [\n            \"address_line1\",\n            \"line1\"\n        ],\n        [\n            \"address_line2\",\n            \"line2\"\n        ],\n        [\n            \"address_city\",\n            \"city\"\n        ],\n        [\n            \"address_country\",\n            \"country\"\n        ],\n        [\n            \"address_state\",\n            \"state\"\n        ],\n        [\n            \"address_postal_code\",\n            \"postal_code\"\n        ]\n    ]){\n        let i = e instanceof FormData ? e.get(s) : e[s];\n        i && typeof i == \"string\" && (t[r] = i);\n    }\n    return t;\n}\nfunction W(e, t = {}) {\n    let [s, r] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [i, a] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [l, n] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), [o, m] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);\n    if (!e) throw new Error('You must provide a form key or hashid (e.g. useForm(\"myForm\") or useForm(\"123xyz\")');\n    let S = x(e, {\n        client: t.client,\n        extraData: t.data,\n        onError (p) {\n            r(p), n(!1), m(!1);\n        },\n        onSuccess (p) {\n            r(null), a(p), n(!1), m(!0);\n        },\n        origin: t.endpoint\n    });\n    return [\n        {\n            errors: s,\n            result: i,\n            submitting: l,\n            succeeded: o\n        },\n        async function(u) {\n            n(!0), await S(u);\n        },\n        function() {\n            r(null), a(null), n(!1), m(!1);\n        }\n    ];\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@formspree/react/dist/index.mjs\n");

/***/ })

};
;